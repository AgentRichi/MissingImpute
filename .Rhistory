install.packages('bnlearn')
knitr::opts_chunk$set(echo = TRUE)
library(bnlearn)
knitr::opts_chunk$set(echo = TRUE)
library(bnlearn)
with.missing.data = gaussian.test
with.missing.data[sample(nrow(with.missing.data), 500), "F"] = NA
View(with.missing.data)
fitted = bn.fit(model2network("[A][B][E][G][C|A:B][D|B][F|A:D:E:G]"),
gaussian.test)
View(fitted)
imputed = impute(fitted, with.missing.data)
View(imputed)
training = bn.fit(model2network("[A][B][E][G][C|A:B][D|B][F|A:D:E:G]"),
gaussian.test[1:2000, ])
View(training)
test = gaussian.test[2001:nrow(gaussian.test), ]
predicted = predict(training, node = "F", data = test)
# obtain the conditional probabilities for the values of a single variable
# given a subset of the rest, they are computed to determine the predicted
# values.
fitted = bn.fit(model2network("[A][C][F][B|A][D|A:C][E|B:F]"), learning.test)
View(fitted)
evidence = data.frame(A = factor("a", levels = levels(learning.test$A)),
F = factor("b", levels = levels(learning.test$F)))
View(evidence)
levels(learning.test$A)
levels(learning.test$F)
predicted = predict(fitted, "C", evidence,
method = "bayes-lw", prob = TRUE)
predicted
attr(predicted, "prob")
install.packages('sqldf')
knitr::opts_chunk$set(echo = TRUE)
library(bnlearn)
library(sqldf)
trips_to_work <- read.csv.sql('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/AD/AD_trips_to_work.csv',
sql = "select * from file order by random() limit 20000")
View(trips_to_work)
?read.csv.sql
trips_to_work <- read.csv.sql('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/AD/AD_trips_to_work.csv',
sql = "select * from file order by random() limit 20")
View(trips_to_work)
trips_to_work <- read.csv('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/AD/AD_trips_to_work.csv')
View(trips_to_work)
trips_od <- read.csv('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/AD/AD_od_by_tod.csv')
View(trips_od)
min(trips_od$nagents_avg_daily)
min(trips_od$nagents_avg_daily,na.rm = T)
min(trips_od$ntrips_avg_daily,na.rm = T)
trips_od <- read.csv('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/AD/AD_trips_by_dow.csv')
View(trips_od)
trips_od <- read.csv('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/DoT/od_by_tod_WD.csv)
trips_od <- read.csv('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/DoT/od_by_tod_WD.csv')
View(trips_od)
View(trips_od[trips_od$origin_sa2==trips_od$dest_sa2,])
trips_od <- read.csv.sql('../190522 DSpark data tables/VicRoadsExport/VicRoadsExport/DoT/od_by_tod_WD.csv')
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$period[1]
trips_od$period[2]
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$starthr <- as.factor(trips_od$starthr)
head(trips_od[c(1:4,6:11)])
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$starthr <- as.factor(trips_od$starthr)
trips_od <- trips_od[c(1:4,6:11)]
?model2network
?modelstring
data(learning.test)
force(learning.test)
?set.arc
?gs
gs(trips_od[1:2,])
trips_od[1:2,]
gs(trips_od[,1:2])
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$starthr <- as.factor(trips_od$starthr)
trips_od <- trips_od[c(1:4,6:11)]
res = set.arc(gs(trips_od), "origin_sa2", "dest_sa2")
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$starthr <- as.factor(trips_od$starthr)
trips_od <- trips_od[c(1:4,6:11)]
#res = set.arc(gs(trips_od), "origin_sa2", "dest_sa2")
fitted = bn.fit(model2network("[origin_sa2][dest_sa2][starthr][dominantMode][ntrips_avg_daily|origin_sa2:dest_sa2:starthr:dominantMode]"),trips_od)
trips_od$origin_sa2 <- as.factor(trips_od$origin_sa2)
trips_od$dest_sa2 <- as.factor(trips_od$dest_sa2)
trips_od$starthr <- as.factor(trips_od$starthr)
trips_od <- trips_od[c(1:4,5)]
#res = set.arc(gs(trips_od), "origin_sa2", "dest_sa2")
fitted = bn.fit(model2network("[origin_sa2][dest_sa2][starthr][dominantMode][ntrips_avg_daily|origin_sa2:dest_sa2:starthr:dominantMode]"),trips_od)
View(fitted)
imputed = impute(fitted, with.missing.data)
?imputed
imputed = impute(fitted, trips_od)
View(trips_od)
